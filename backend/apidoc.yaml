openapi: 3.0.0
info:
  title: Online Bookstore API
  description: API for managing users and books inventory
  version: 1.0.0
servers:
  - url: http://localhost:8081
    description: Development server

paths:
  /signup:
    post:
      tags: [Authentication]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /login:
    post:
      tags: [Authentication]
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /books:
    get:
      tags: [Books]
      summary: Get all books
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookListResponse'
    post:
      tags: [Books]
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        '200':
          description: Book added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /books/{id}:
    delete:
      tags: [Books]
      summary: Delete a book
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

components:
  schemas:
    UserSignup:
      type: object
      required: [firstName, lastName, email, password]
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 6
          example: securepassword

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        user:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string

    BookCreate:
      type: object
      required: [title, author, category]
      properties:
        title:
          type: string
          example: The Great Gatsby
        author:
          type: string
          example: F. Scott Fitzgerald
        category:
          type: string
          example: Classic
        price:
          type: number
          format: float
          example: 10.99
        stock:
          type: integer
          example: 50

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error description

    BookListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        price:
          type: number
        category:
          type: string