{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARIAM\\\\formik-tutorial\\\\src\\\\components\\\\Signup.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { TextField } from './TextField.js';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nexport const Signup = () => {\n  const validate = Yup.object({\n    firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 charaters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required')\n  });\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: data => {\n      console.log(data);\n      let formData = new FormData();\n      formData.append('firstName', data.firstName);\n      formData.append('lastName', data.lastName);\n      formData.append('email', data.email);\n      formData.append('password', data.password);\n      axios({\n        method: 'post',\n        url: 'http://localhost/devtest/reactjs/signup.php/',\n        data: formData,\n        config: {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      }).then(function (response) {\n        //handle success\n        console.log(response);\n        alert('New User Successfully Added.');\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, formik => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"my-4 font-weight-bold .display-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"First Name\",\n    name: \"firstName\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"last Name\",\n    name: \"lastName\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"password\",\n    name: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mt-3\",\n    type: \"submit\",\n    style: {\n      marginRight: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning mt-3 ml-3\",\n    type: \"reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Reset\"))));\n};","map":{"version":3,"names":["React","Formik","Form","TextField","Yup","axios","Signup","validate","object","firstName","string","max","required","lastName","email","password","min","confirmPassword","oneOf","ref","createElement","initialValues","validationSchema","onSubmit","data","console","log","formData","FormData","append","method","url","config","headers","then","response","alert","catch","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formik","className","label","name","type","style","marginRight"],"sources":["C:/Users/MARIAM/formik-tutorial/src/components/Signup.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './TextField.js';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n \r\nexport const Signup = () => {\r\n  const validate = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, 'Must be 15 characters or less')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .max(20, 'Must be 20 characters or less')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 charaters')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Password must match')\r\n      .required('Confirm password is required'),\r\n  })\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={validate}\r\n      onSubmit={data => {\r\n        console.log(data)\r\n         \r\n        let formData = new FormData();\r\n        formData.append('firstName', data.firstName)\r\n        formData.append('lastName', data.lastName)\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n  \r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/devtest/reactjs/signup.php/',\r\n            data: formData,\r\n            config: { headers: {'Content-Type': 'multipart/form-data' }}\r\n        })\r\n        .then(function (response) {\r\n            //handle success\r\n            console.log(response)\r\n            alert('New User Successfully Added.');  \r\n        })\r\n        .catch(function (response) {\r\n            //handle error\r\n            console.log(response)\r\n        });\r\n         \r\n      }}>\r\n       \r\n      {formik => (\r\n        <div>\r\n          <h1 className=\"my-4 font-weight-bold .display-4\">Sign Up</h1>\r\n          <Form>\r\n            <TextField label=\"First Name\" name=\"firstName\" type=\"text\" />\r\n            <TextField label=\"last Name\" name=\"lastName\" type=\"text\" />\r\n            <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n            <TextField label=\"password\" name=\"password\" type=\"password\" />\r\n            <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" />\r\n            <button className=\"btn btn-primary mt-3\" type=\"submit\" style={{marginRight: 20}}>Register</button>\r\n            <button className=\"btn btn-warning mt-3 ml-3\" type=\"reset\">Reset</button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}